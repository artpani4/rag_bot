// service/bot/handlers/import.ts

import { Bot } from "https://deno.land/x/grammy@v1.36.1/bot.ts";
import { Api, Context as Ctx, RawApi } from "@grammy";
import { config } from "$shared";
import luminous from "$luminous";
import { ChatData } from "../../../types.ts";
import { processChatImport } from "./import_worker.ts";

const log = new luminous.Logger(
  new luminous.OptionsBuilder().setName("IMPORT_HANDLER").build(),
);

export function registerImportHandler(bot: Bot<Ctx, Api<RawApi>>) {
  bot.on("message:document", async (ctx) => {
    const doc = ctx.message?.document;
    if (!doc?.file_name?.endsWith(".json")) {
      return ctx.reply("‚õîÔ∏è –¢–æ–ª—å–∫–æ .json —Ñ–∞–π–ª—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è!");
    }

    log.inf(`–ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª: ${doc.file_name} (${doc.file_size} bytes)`);

    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É
    let fileUrl: string;
    try {
      const tgFile = await ctx.api.getFile(doc.file_id);
      fileUrl =
        `https://api.telegram.org/file/bot${config.env.TG_BOT_TOKEN}/${tgFile.file_path}`;
      log.trc("–ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª: " + fileUrl);
    } catch (e) {
      log.err("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏: " + e);
      return ctx.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª.");
    }

    // –û—Ç–≤–µ—Ç —Å—Ä–∞–∑—É, –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äî –≤ —Ñ–æ–Ω–µ
    await ctx.reply("üì• –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω, –Ω–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ —Ñ–æ–Ω–µ...");

    processChatImport(ctx.chat.id, fileUrl, ctx.api).catch((err) => {
      log.err("–§–æ–Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: " + err);
    });
  });
}
